train_csv: 'dataset\train_csv.csv'
val_csv: 'dataset\val_csv.csv'
test_csv: 'dataset\test_csv.csv'

train_images: 'dataset\train_images'
val_images: 'dataset\val_images'
test_images: 'dataset\test_images'

epochs: 50
learning_rate: 0.1
weight_decay: 0.0001
image_size: 256
train_batch: 32
test_batch: 128

scheduler_patience: 2
scheduler_threshold: 0.001

es_patience: 6
es_delta: 0.

checkpoints_folder: 'checkpoints'
save_checkpoints: True     # if True saves a model(.pth.tar) into the checkponts_folder if its accuracy more than all of previous epochs

load_checkpoint_path: 'checkpoints\some_checkpoint.pth.tar'
load_checkpoint: False     # if True loads a model weights from the load_checkpoint_path

mean: [0.5079, 0.4671, 0.4429]     # for normalization(get_mean_std.py)
std: [0.2924, 0.2688, 0.2716]
